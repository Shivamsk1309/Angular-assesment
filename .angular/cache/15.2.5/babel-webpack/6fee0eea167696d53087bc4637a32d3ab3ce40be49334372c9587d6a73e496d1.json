{"ast":null,"code":"import { db } from \"./../assets/movie-db\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./header/header.component\";\nimport * as i3 from \"./footer/footer.component\";\nimport * as i4 from \"./card/card.component\";\nfunction AppComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 7);\n    i0.ɵɵlistener(\"change\", function AppComponent_div_8_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const language_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onLanguageSelected(language_r3.name));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const language_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", language_r3.checked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", language_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", language_r3.name, \" \");\n  }\n}\nfunction AppComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 7);\n    i0.ɵɵlistener(\"change\", function AppComponent_div_12_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const genre_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onGenreSelected(genre_r6.name));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const genre_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", genre_r6.checked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", genre_r6.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", genre_r6.name, \" \");\n  }\n}\nfunction AppComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"app-card\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const movie_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"movie\", movie_r9);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.errorMessage = \"\";\n    this.movies = [];\n    this.filteredMovies = [];\n    this.languages = db.languages;\n    this.selectedLanguages = this.languages.filter(lang => lang.checked).map(lang => lang.name);\n    this.genres = db.genres;\n    this.selectedGenres = this.genres.filter(genre => genre.checked).map(genre => genre.name);\n  }\n  ngOnInit() {\n    this.movies = db.movies;\n    this.filteredMovies = this.movies;\n  }\n  getAllLanguages() {\n    return this.languages.map(lang => lang.name);\n  }\n  getAllGenres() {\n    return this.genres.map(genre => genre.name);\n  }\n  onLanguageSelected(language) {\n    const index = this.selectedLanguages.indexOf(language);\n    if (index > -1) {\n      this.selectedLanguages.splice(index, 1);\n    } else {\n      this.selectedLanguages.push(language);\n    }\n    this.getFilteredMovies();\n  }\n  onGenreSelected(genre) {\n    const index = this.selectedGenres.indexOf(genre);\n    if (index > -1) {\n      this.selectedGenres.splice(index, 1);\n    } else {\n      this.selectedGenres.push(genre);\n    }\n    this.getFilteredMovies();\n  }\n  getFilteredMovies() {\n    this.filteredMovies = this.movies.filter(movie => this.selectedLanguages.includes(movie.language.toLowerCase()) && this.selectedGenres.includes(movie.genre.toLowerCase()));\n  }\n  clearFilters() {\n    this.selectedLanguages = [];\n    this.selectedGenres = [];\n    this.getFilteredMovies();\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[1, \"movies-container\"], [1, \"row\"], [1, \"language\"], [4, \"ngFor\", \"ngForOf\"], [1, \"genre\"], [1, \"movie-cards-container\"], [\"class\", \"movie-card-wrapper\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [3, \"for\"], [1, \"movie-card-wrapper\"], [3, \"movie\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-header\")(1, \"h1\");\n      i0.ɵɵtext(2, \"Logo\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"div\", 2)(6, \"h4\");\n      i0.ɵɵtext(7, \"Languages:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, AppComponent_div_8_Template, 4, 3, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"h4\");\n      i0.ɵɵtext(11, \"Genres:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, AppComponent_div_12_Template, 4, 3, \"div\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 5);\n      i0.ɵɵtemplate(14, AppComponent_div_14_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"app-footer\");\n      i0.ɵɵtext(16, \" \\u00A9 2022 copyright Movie List\\n\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.languages);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.genres);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredMovies);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.HeaderComponent, i3.FooterComponent, i4.CardComponent],\n  styles: [\".movies-container[_ngcontent-%COMP%]{\\n    display:flex;\\n    }\\n    \\n    .movie-cards-container[_ngcontent-%COMP%]{\\n    \\n        display:grid;\\n        grid-template-columns: repeat(3,1fr);\\n        gap:1rem;\\n    \\n    }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1o7O0lBRUE7O1FBRUksWUFBWTtRQUNaLG9DQUFvQztRQUNwQyxRQUFROztJQUVaIiwic291cmNlc0NvbnRlbnQiOlsiLm1vdmllcy1jb250YWluZXJ7XG4gICAgZGlzcGxheTpmbGV4O1xuICAgIH1cbiAgICBcbiAgICAubW92aWUtY2FyZHMtY29udGFpbmVye1xuICAgIFxuICAgICAgICBkaXNwbGF5OmdyaWQ7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsMWZyKTtcbiAgICAgICAgZ2FwOjFyZW07XG4gICAgXG4gICAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["db","i0","AppComponent","constructor","languages","filter","lang","checked","map","name","genres","genre","ngOnInit","movies","filteredMovies","getAllLanguages","getAllGenres","onLanguageSelected","language","index","selectedLanguages","indexOf","splice","push","getFilteredMovies","onGenreSelected","selectedGenres","movie","includes","toLowerCase","clearFilters","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/shivam/Documents/angular/phase2-ng-movie-app/src/app/app.component.ts","/home/shivam/Documents/angular/phase2-ng-movie-app/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Movie } from './models/movie';\n\nimport { db } from \"./../assets/movie-db\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\n\nexport class AppComponent implements OnInit {\n\n  errorMessage:string = \"\";\n  movies:Movie[] =[];\n  filteredMovies:Movie[] = [];\n  languages:any[] = db.languages;\n  selectedLanguages = this.languages.filter(lang => lang.checked).map(lang => lang.name);\n  genres:any[] = db.genres;\n  selectedGenres = this.genres.filter(genre => genre.checked).map(genre => genre.name);\n\n  ngOnInit(): void {\n      this.movies = db.movies;\n      this.filteredMovies = this.movies;\n  }\n  getAllLanguages(): string[] {\n    return this.languages.map(lang => lang.name);\n  }\n\n  getAllGenres(): string[] {\n    return this.genres.map(genre => genre.name);\n  }\n  onLanguageSelected(language: string) {\n    const index = this.selectedLanguages.indexOf(language);\n    if (index > -1) {\n      this.selectedLanguages.splice(index, 1);\n    } else {\n      this.selectedLanguages.push(language);\n    }\n    this.getFilteredMovies();\n  }\n  onGenreSelected(genre: string) {\n    const index = this.selectedGenres.indexOf(genre);\n    if (index > -1) {\n      this.selectedGenres.splice(index, 1);\n    } else {\n      this.selectedGenres.push(genre);\n    }\n    this.getFilteredMovies();\n  }\n  getFilteredMovies() {\n    this.filteredMovies = this.movies.filter(movie => \n      this.selectedLanguages.includes(movie.language.toLowerCase()) &&\n      this.selectedGenres.includes(movie.genre.toLowerCase())\n    );\n  }\nclearFilters() {\n  this.selectedLanguages = [];\n  this.selectedGenres = [];\n  this.getFilteredMovies()\n}\n}\n\n\n\n","<app-header>\n    <h1>Logo</h1>\n</app-header>\n\n<div class=\"movies-container\">\n    <div class=\"row\">\n        <div class=\"language\">\n            <h4>Languages:</h4>\n            <div *ngFor=\"let language of languages\">\n                <input type=\"checkbox\" [checked]=\"language.checked\" (change)=\"onLanguageSelected(language.name)\">\n                <label [for]=\"language.name\">\n                    {{ language.name }}\n                </label>\n            </div>\n        </div>\n        <div class=\"genre\">\n            <h4>Genres:</h4>\n            <div *ngFor=\"let genre of genres\">\n                <input type=\"checkbox\" [checked]=\"genre.checked\" (change)=\"onGenreSelected(genre.name)\">\n                <label [for]=\"genre.name\">\n                    {{ genre.name }}\n                </label>\n            </div>\n        </div>\n    </div>\n    <div class=\"movie-cards-container\">\n        <div class=\"movie-card-wrapper\" *ngFor=\"let movie of filteredMovies\">\n            <app-card [movie]=\"movie\"></app-card>\n        </div>\n\n    </div>\n</div>\n\n\n<app-footer>\n    &copy; 2022 copyright Movie List\n</app-footer>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}